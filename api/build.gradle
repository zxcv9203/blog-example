plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':core')
	implementation project(':common')

	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	implementation 'org.springframework.session:spring-session-jdbc'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.1'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.data:spring-data-commons'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy(asciidoctor)
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
	finalizedBy(copyDocs)
}

tasks.register('copyDocs', Copy) {
	dependsOn 'asciidoctor'
	from 'build/docs/asciidoc'
	into 'src/main/resources/static/docs'
}

tasks.register("prepareKotlinBuildScriptModel")